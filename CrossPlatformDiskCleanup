{
  "schemaVersion": "2.2",
  "description": "Cross-platform disk cleanup for patch remediation",
  "parameters": {
    "executionTimeout": {
      "type": "String",
      "default": "3600",
      "description": "Timeout for command execution"
    }
  },
  "mainSteps": [
    {
      "action": "aws:runPowerShellScript",
      "name": "WindowsDiskCleanup",
      "precondition": {
        "StringEquals": ["platformType", "Windows"]
      },
      "inputs": {
        "timeoutSeconds": "{{ executionTimeout }}",
        "runCommand": [
          "Write-Output 'Starting Windows disk cleanup for patch remediation'",
          "# Clean temporary files older than 7 days",
          "Get-ChildItem -Path $env:TEMP -Recurse -ErrorAction SilentlyContinue | Where-Object {$_.LastWriteTime -lt (Get-Date).AddDays(-7)} | Remove-Item -Force -Recurse -ErrorAction SilentlyContinue",
          "Get-ChildItem -Path \"$env:WINDIR\\Temp\" -Recurse -ErrorAction SilentlyContinue | Where-Object {$_.LastWriteTime -lt (Get-Date).AddDays(-7)} | Remove-Item -Force -Recurse -ErrorAction SilentlyContinue",
          "# Run disk cleanup utility",
          "Start-Process -FilePath 'cleanmgr' -ArgumentList '/sagerun:1' -Wait -WindowStyle Hidden -ErrorAction SilentlyContinue",
          "# Check available disk space after cleanup",
          "$disk = Get-WmiObject -Class Win32_LogicalDisk -Filter \"DeviceID='C:'\"",
          "$freeSpaceGB = [math]::Round($disk.FreeSpace / 1GB, 2)",
          "Write-Output \"Available disk space after cleanup: $freeSpaceGB GB\"",
          "# Clean Windows Update cache",
          "Stop-Service wuauserv -Force -ErrorAction SilentlyContinue",
          "Remove-Item -Path 'C:\\Windows\\SoftwareDistribution\\Download\\*' -Recurse -Force -ErrorAction SilentlyContinue",
          "Start-Service wuauserv -ErrorAction SilentlyContinue",
          "Write-Output 'Windows disk cleanup completed successfully'"
        ]
      }
    },
    {
      "action": "aws:runShellScript",
      "name": "LinuxDiskCleanup",
      "precondition": {
        "StringEquals": ["platformType", "Linux"]
      },
      "inputs": {
        "timeoutSeconds": "{{ executionTimeout }}",
        "runCommand": [
          "#!/bin/bash",
          "echo 'Starting Linux disk cleanup for patch remediation'",
          "# Clean temporary files older than 7 days",
          "find /tmp -type f -atime +7 -delete 2>/dev/null || true",
          "find /var/tmp -type f -atime +7 -delete 2>/dev/null || true",
          "# Clean package manager cache - supports RHEL/CentOS, Ubuntu/Debian, SUSE",
          "if command -v yum &> /dev/null; then",
          "    yum clean all 2>/dev/null || true",
          "    echo 'YUM cache cleaned'",
          "elif command -v dnf &> /dev/null; then",
          "    dnf clean all 2>/dev/null || true",
          "    echo 'DNF cache cleaned'",
          "elif command -v apt-get &> /dev/null; then",
          "    apt-get clean 2>/dev/null || true",
          "    apt-get autoclean 2>/dev/null || true",
          "    echo 'APT cache cleaned'",
          "elif command -v zypper &> /dev/null; then",
          "    zypper clean 2>/dev/null || true",
          "    echo 'Zypper cache cleaned'",
          "fi",
          "# Clean journal logs older than 30 days",
          "journalctl --vacuum-time=30d 2>/dev/null || true",
          "# Remove old log files",
          "find /var/log -name '*.log.*' -mtime +30 -delete 2>/dev/null || true",
          "find /var/log -name '*.gz' -mtime +30 -delete 2>/dev/null || true",
          "# Clean core dumps",
          "find /var/crash -name 'core.*' -mtime +7 -delete 2>/dev/null || true",
          "# Show disk usage after cleanup",
          "df -h / | grep -v Filesystem",
          "echo 'Linux disk cleanup completed successfully'"
        ]
      }
    }
  ]
}
