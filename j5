// Configuration - UPDATE THESE VALUES
def ROLE_ARN = "arn:aws:iam::123456789012:role/JenkinsOrganizationsReadRole"
def EXTERNAL_ID = "your-external-id-here"  // Remove if not needed
def AWS_REGION = "us-east-1"

// Get the SCOPE value
def scopeValue = SCOPE

// Build the AWS CLI command as a string
def assumeRoleCmd = "aws sts assume-role --role-arn ${ROLE_ARN} --role-session-name jenkins-parameter-discovery"

// Add external ID if configured
if (EXTERNAL_ID && EXTERNAL_ID != 'your-external-id-here') {
    assumeRoleCmd += " --external-id ${EXTERNAL_ID}"
}

try {
    // Since we can't use ProcessBuilder, return a static list based on scope
    // This is a workaround for the Jenkins sandbox restrictions
    
    if (scopeValue == 'Account') {
        // Return sample account names - you'll need to update these manually
        return [
            'Production-Account',
            'Development-Account', 
            'Staging-Account',
            'Security-Account',
            'Shared-Services-Account'
        ]
    } else if (scopeValue == 'OU') {
        // Return sample OU names - you'll need to update these manually  
        return [
            'Production-OU',
            'Development-OU',
            'Security-OU',
            'Workloads-OU',
            'Sandbox-OU'
        ]
    } else {
        return ['Please select a scope first']
    }
    
} catch (Exception e) {
    return ["Error: ${e.message}"]
}
